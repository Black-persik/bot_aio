from fastapi import FastAPI, Request, status

from contextlib import asynccontextmanager
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = "8037361730:AAGYYuoPNuewlq5ufMpaT0VBZFG5qDAgaAQ"
WEBHOOK_URL = "https://bot_aio.vercel.app"
WEBHOOK_PATH = "/webhook"


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()


def get_about_us_text() -> str:
    return """
üåü –≠–õ–ï–ì–ê–ù–¢–ù–ê–Ø –ü–ê–†–ò–ö–ú–ê–•–ï–†–°–ö–ê–Ø "–°–¢–ò–õ–¨ –ò –®–ê–†–ú" üåü

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–∑—ã—Å–∫–∞–Ω–Ω–æ–π –∫—Ä–∞—Å–æ—Ç—ã –∏ –Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è!

‚ú® –ù–∞—à–∞ –º–∏—Å—Å–∏—è:
–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Ä–∞—Å–∫—Ä—ã—Ç—å –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∫—Ä–∞—Å–æ—Ç—É, –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–∞—Ä–∏—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ.

üé® –ù–∞—à–∏ —É—Å–ª—É–≥–∏:
‚Ä¢ –°—Ç—Ä–∏–∂–∫–∏ –∏ —É–∫–ª–∞–¥–∫–∏ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –≤–æ–ª–æ—Å
‚Ä¢ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –∏ –∫–æ–ª–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –£—Ö–æ–¥–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–ª—è –≤–æ–ª–æ—Å
‚Ä¢ –ú–∞–∫–∏—è–∂ –∏ –≤–∏–∑–∞–∂
‚Ä¢ –ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä

üë©‚Äçüé® –ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞:
–¢–∞–ª–∞–Ω—Ç–ª–∏–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ–º –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. –ú—ã —Å–ª–µ–¥–∏–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏.

üåø –ù–∞—à–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞:
–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—é—Ç–∞ –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏. –ö–∞–∂–¥—ã–π –≤–∏–∑–∏—Ç –∫ –Ω–∞–º - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –∞ –Ω–∞—Å—Ç–æ—è—â–∏–π —Ä–∏—Ç—É–∞–ª –∫—Ä–∞—Å–æ—Ç—ã –∏ –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ.

üíé –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å:
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π –∫–æ—Å–º–µ—Ç–∏–∫–∏
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
‚Ä¢ –£—é—Ç–Ω–∞—è –∏ —Å—Ç–∏–ª—å–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞
‚Ä¢ –£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞

–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —Å—Ç–∏–ª—è –≤–º–µ—Å—Ç–µ —Å "–°–¢–ò–õ–¨ –ò –®–ê–†–ú"!
–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ —Å–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –≤–∞—à–µ–º—É –Ω–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É.

‚ú® –í–∞—à–∞ –∫—Ä–∞—Å–æ—Ç–∞ - –Ω–∞—à–µ –ø—Ä–∏–∑–≤–∞–Ω–∏–µ! ‚ú®
"""


async def greet_user(message: types.Message, is_new_user: bool = True) -> None:
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    greeting = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" if is_new_user else "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º"
    status = "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!" if is_new_user else "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!"
    await message.answer(
        f"{greeting}, <b>{message.from_user.full_name}</b>! {status}\n"
        "–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?",
        reply_markup=main_keyboard(user_id=message.from_user.id, first_name=message.from_user.first_name)
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def command_start_handler(message: types.Message) -> None:
    await greet_user(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
@dp.message(lambda message: message.text == "–û –Ω–∞—Å")
async def about_us_handler(message: types.Message) -> None:
    await message.answer(get_about_us_text())




# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI —Å –º–µ—Ç–æ–¥–æ–º –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
app = FastAPI()


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
@app.get("/")
async def root():
    return {"status": "ok", "message": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"}


# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–æ–≤
# Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.post("/webhook")
async def webhook(request: Request):
    try:
        update_json = await request.json()
        print("üì° –ü–æ–ª—É—á–µ–Ω update:", update_json)
        update = types.Update.model_validate(update_json)

        # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        await dp.feed_update(bot, update)
        return {"status": "ok"}
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:", str(e))
        return {"status": "error", "message": str(e)}
